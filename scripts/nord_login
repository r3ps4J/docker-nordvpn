#!/bin/bash

PREVIOUS_CALLBACK_FILE="/var/lib/nordvpn/previous_callback.txt"

if ! iptables -L > /dev/null 2>&1
then
  echo -e "$(date "+%F %T%z")\tWARNING\tiptables is not functional. Ensure your container capabilities include NET_ADMIN" 1>&2
  # Null route rather than leaving traffic unprotected.
  ip route del default
  ip route del 0.0.0.0/1 > /dev/null 2>&1
  ip route add default via 127.0.0.1
  echo -e "$(date "+%F %T%z")\tWARNING\tDue to errors, routing has been disabled and further execution halted; please check your container configuration" 1>&2
  # Don't allow execution to proceed as traffic may not be protected. Don't exit either as
  # containers that expect to be behind the VPN will route through the normal network.
  while true
  do
    sleep 3600
  done
fi

[[ -f "${PREVIOUS_CALLBACK_FILE}" ]] && PREVIOUS_CALLBACK="$(head -n 1 "${PREVIOUS_CALLBACK_FILE}")"

if [[ -n $PREVIOUS_CALLBACK ]]
then
  echo -e "$(date "+%F %T%z")\tINFO\tPreviously logged in with callback, skipping authentication."
else
  nordvpn logout --persist-token > /dev/null 2>&1
  rm -f $PREVIOUS_CALLBACK_FILE
  if [[ -n ${TOKEN} ]]
  then
    nordvpn login --token "${TOKEN}" > /dev/null || {
      echo -e "$(date "+%F %T%z")\tWARNING\tInvalid token."
      exit 1
    }
  else
    if [[ -t 0 ]]
    then
      /usr/local/bin/nord_login_callback || {
        echo -e "$(date "+%F %T%z")\tWARNING\tInteractive login failed."
        exit 1
      }
    else
      echo -e "$(date "+%F %T%z")\tINFO\tPlease start the interactive login process by executing the following command on the host:"
      echo -e "$(date "+%F %T%z")\tINFO\tdocker exec -i $(cat /etc/hostname) nord_login_callback"
      while [ ! -f $PREVIOUS_CALLBACK_FILE ]
      do
        echo -e "$(date "+%F %T%z")\tINFO\tWaiting for interactive login process to complete..."
        sleep 2s
      done
    fi
  fi
fi

## Clear sensitive variables
echo "Login successful; connection now in progress..."
exit 0
